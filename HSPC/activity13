#include <stdio.h>
#include <math.h>
struct Rectangle
{
  float x1,y1,x2,y2,x3,y3,area;
};
typedef struct Rectangle rec;

float compute_dist(float x1,float y1,float x2,float y2)
{
    return sqrt(pow((x2-x1),2)+pow((y2-y1),2));
}
float compute_area(float l , float b)
{
    return l*b;
}
rec input_n()
{
    rec rect;
    scanf("%f %f %f %f %f %f", &rect.x1, &rect.y1, &rect.x2, &rect.y2, &rect.x3, &rect.y3);
    return rect;
}
void input(int n , rec rectangles[n])
{
    for(int i = 0;i<n;i++)
    {
        printf("Enter the coordinates for rectangle %d :- ",i+1);
        rectangles[i]=input_n();
    }

}
void compute(int n, rec rectangles[n])
{
    for (int i = 0; i < n; i++)
        com(&rectangles[i]);
}
void com(rec rect)
{
    float l = compute_dist(rect.x1,rect.y1,rect.x2,rect.y2);
    float b = compute_dist(rect.x2,rect.y2,rect.x3,rect.y3);
    float h = compute_dist(rect.x1,rect.y1,rect.x3,rect.y3);
    if(l>b&&l>h)
        rect.area = compute_area(b,h);
    else if(b>l&&b>h)
        rect.area = compute_area(l,h);
    else
        rect.area = compute_area(l,b);
}
void output_1(rec rect)
{
    printf("Area of rectangle with vertices (%f,%f), (%f,%f), (%f,%f) is :- %.3f \n",rect.x1, rect.y1, rect.x2, rect.y2, rect.x3, rect.y3, rect.area);
}

void output_n(int n, rec rect[n])
{
    for (int i = 0; i < n; i++)
        output_1(rect[i]);
}
void main()
{
    int n ;
    printf("Enter the number of rectangles to be analysed:-");
    scanf("%d",&n);
    rec rectangles[n];
    input(n,rectangles);
    compute(n,rectangles);
    output_n(n,rectangles);
}
